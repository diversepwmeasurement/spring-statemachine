jobs:
  central:
    environment: central
    needs: ghrelease
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      env:
        JF_ENV_SPRING: ${{ secrets.JF_ARTIFACTORY_SPRING }}
      uses: jfrog/setup-jfrog-cli@v4
      with:
        version: 2.52.10
    - continue-on-error: true
      name: Configure JFrog Cli
      run: 'echo JFROG_CLI_BUILD_NAME=spring-statemachine-main-release >> $GITHUB_ENV

        echo JFROG_CLI_BUILD_NUMBER=$GITHUB_RUN_NUMBER >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Download Release Files
      run: "jf rt download \\\n  --spec .github/release-files-spec.json \\\n  --spec-vars\
        \ \"buildname=$JFROG_CLI_BUILD_NAME;buildnumber=$JFROG_CLI_BUILD_NUMBER\"\n"
    - continue-on-error: true
      uses: spring-io/nexus-sync-action@main
      with:
        close: true
        create: true
        generate-checksums: true
        password: ${{ secrets.OSSRH_S01_TOKEN_PASSWORD }}
        release: true
        staging-profile-name: ${{ secrets.OSSRH_STAGING_PROFILE_NAME }}
        upload: true
        username: ${{ secrets.OSSRH_S01_TOKEN_USERNAME }}
  ghrelease:
    needs:
    - staging
    - promote
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Install Tooling
      run: 'curl -sSL https://github.com/cbroglie/mustache/releases/download/v1.2.2/mustache_1.2.2_linux_amd64.tar.gz
        | sudo tar -C /usr/local/bin/ --no-same-owner -xzv mustache

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        PROJECT_VERSION: ${{needs.staging.outputs.project-version}}
        RELEASE_NOTES_DATA: ${{runner.temp}}/release_notes_data.json
        RELEASE_NOTES_FILE: ${{runner.temp}}/release_notes.md5
        RELEASE_NOTES_FOOTERS: ${{runner.temp}}/release_notes_footers.json
        RELEASE_NOTES_HEADERS: ${{runner.temp}}/release_notes_headers.json
        RELEASE_NOTES_ISSUES: ${{runner.temp}}/release_notes_issues.json
      name: GitHub Release
      run: "gh issue list \\\n  --repo spring-projects/spring-statemachine \\\n  --milestone\
        \ $PROJECT_VERSION \\\n  --label automation/rlnotes-header  \\\n  --state\
        \ all --json title,body \\\n  --jq '{headers:map(.),headerslength:(length)}'\
        \ \\\n  > $RELEASE_NOTES_HEADERS\ngh issue list \\\n  --repo spring-projects/spring-statemachine\
        \ \\\n  --milestone $PROJECT_VERSION \\\n  --label automation/rlnotes-footer\
        \  \\\n  --state all --json title,body \\\n  --jq '{footers:map(.),footerslength:(length)}'\
        \ \\\n  > $RELEASE_NOTES_FOOTERS\ngh issue list \\\n  --repo spring-projects/spring-statemachine\
        \ \\\n  --milestone $PROJECT_VERSION \\\n  --state all --json number,title,labels\
        \ \\\n  --jq '{issues:map(select((.labels | length == 0) or (any(.labels[].name;\
        \ startswith(\"automation/rlnotes\")|not))))}' \\\n  > $RELEASE_NOTES_ISSUES\n\
        jq -s '{issues:(.[0].issues),headers:(.[1].headers),headerslength:(.[1].headerslength),footers:(.[2].footers),\
        \ footerslength:(.[2].footerslength)}' \\\n  $RELEASE_NOTES_ISSUES \\\n  $RELEASE_NOTES_HEADERS\
        \ \\\n  $RELEASE_NOTES_FOOTERS \\\n  > $RELEASE_NOTES_DATA\nmustache $RELEASE_NOTES_DATA\
        \ .github/rlnotes.mustache > $RELEASE_NOTES_FILE\ngh release create v$PROJECT_VERSION\
        \ \\\n  --draft \\\n  --title \"$PROJECT_VERSION\" \\\n  --notes-file $RELEASE_NOTES_FILE\n"
  promote:
    environment: promote
    needs: staging
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      env:
        JF_ENV_SPRING: ${{ secrets.JF_ARTIFACTORY_SPRING }}
      uses: jfrog/setup-jfrog-cli@v4
      with:
        version: 2.52.10
    - continue-on-error: true
      name: Configure JFrog Cli
      run: "jf gradlec \\\n  --use-wrapper \\\n  --deploy-ivy-desc=false \\\n  --server-id-resolve=repo.spring.io\
        \ \\\n  --server-id-deploy=repo.spring.io \\\n  --repo-resolve=libs-release\
        \ \\\n  --repo-deploy=libs-staging-local\necho JFROG_CLI_BUILD_NAME=spring-statemachine-main-release\
        \ >> $GITHUB_ENV\necho JFROG_CLI_BUILD_NUMBER=$GITHUB_RUN_NUMBER >> $GITHUB_ENV\n"
    - continue-on-error: true
      name: Promote Build
      run: 'jf rt build-promote libs-release-local

        '
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_SECRET_ACCESS_KEY
          }}
        GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD
          }}
        GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USER
          }}
      name: Switch to Next Dev Version
      run: 'jf gradle nextVersion

        '
    - continue-on-error: true
      uses: jvalkeal/build-zoo-handler@v0.0.4
      with:
        commit-changes-branch: main
        commit-changes-message: Next development version
  staging:
    outputs:
      project-version: ${{ steps.output.outputs.project-version }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      uses: actions/setup-java@v1
      with:
        java-version: 17
    - continue-on-error: true
      env:
        JF_ENV_SPRING: ${{ secrets.JF_ARTIFACTORY_SPRING }}
      uses: jfrog/setup-jfrog-cli@v4
      with:
        version: 2.52.10
    - continue-on-error: true
      name: Configure JFrog Cli
      run: "jf gradlec \\\n  --use-wrapper \\\n  --deploy-ivy-desc=false \\\n  --server-id-resolve=repo.spring.io\
        \ \\\n  --server-id-deploy=repo.spring.io \\\n  --repo-resolve=libs-release\
        \ \\\n  --repo-deploy=libs-staging-local\necho JFROG_CLI_BUILD_NAME=spring-statemachine-main-release\
        \ >> $GITHUB_ENV\necho JFROG_CLI_BUILD_NUMBER=$GITHUB_RUN_NUMBER >> $GITHUB_ENV\n"
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_SECRET_ACCESS_KEY
          }}
        GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD
          }}
        GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USER
          }}
      name: Configure Release Version
      run: 'jf gradle releaseVersion

        echo PROJECT_VERSION=$(cat gradle.properties | grep "version=" | awk -F''=''
        ''{print $2}'') >> $GITHUB_ENV

        '
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_SECRET_ACCESS_KEY
          }}
        GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD
          }}
        GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USER
          }}
      name: Build and Publish
      run: 'jf gradle clean build artifactoryPublish

        jf rt build-publish

        '
    - continue-on-error: true
      name: Tag Release
      uses: jvalkeal/build-zoo-handler@v0.0.4
      with:
        tag-release-branch: ${{ env.PROJECT_VERSION }}
        tag-release-tag: ${{ env.PROJECT_VERSION }}
        tag-release-tag-prefix: v
    - continue-on-error: true
      env:
        PROJECT_VERSION: ${{ env.PROJECT_VERSION }}
      id: output
      name: Output
      run: 'echo "::set-output name=project-version::$PROJECT_VERSION"

        '
name: Release GA
on:
  repository_dispatch:
    types: trigger-ga___release-ga.yml
